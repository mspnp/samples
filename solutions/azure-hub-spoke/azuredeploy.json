{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUserName": {
            "type": "string",
            "defaultValue": "azureadmin",
            "metadata": {
                "description": "The admin user name for both the Windows and Linux virtual machines."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The admin password for both the Windows and Linux virtual machines."
            }
        },
        "windowsVMCount": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "The count of Windows virtual machines to create."
            }
        },
        "linuxVMCount": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "The count of Windows virtual machines to create."
            }
        },
		"vmSize": {
			"type": "string",
			"defaultValue": "Standard_A1_v2"
		},
        "deployVpnGateway": {
            "type": "bool",
            "defaultValue": false
        },
        "hubNetwork": {
            "type": "object",
            "defaultValue": {
                "name": "vnet-hub",
                "addressPrefix": "10.0.0.0/20"
            }
        },
        "spokeNetwork": {
            "type": "object",
            "defaultValue": {
                "name": "vnet-spoke-one",
                "addressPrefix": "10.100.0.0/16",
                "subnetName": "snet-spoke-resources",
                "subnetPrefix": "10.100.0.0/16",
                "subnetNsgName": "nsg-spoke-one-resources"
            }
        },
        "spokeNetworkTwo": {
            "type": "object",
            "defaultValue": {
                "name": "vnet-spoke-two",
                "addressPrefix": "10.200.0.0/16",
                "subnetName": "snet-spoke-resources",
                "subnetPrefix": "10.200.0.0/16",
                "subnetNsgName": "nsg-spoke-two-resources"
            }
        },
        "vpnGateway": {
            "type": "object",
            "defaultValue": {
                "name": "vgw-gateway",
                "subnetName": "GatewaySubnet",
                "subnetPrefix": "10.0.2.0/27",
                "pipName": "pip-vgw-gateway"
            }
        },
        "bastionHost": {
            "type": "object",
            "defaultValue": {
                "name": "AzureBastionHost",
                "publicIPAddressName": "pip-bastion",
                "subnetName": "AzureBastionSubnet",
                "nsgName": "nsg-hub-bastion",
                "subnetPrefix": "10.0.1.0/29"
            }
        },
        "azureFirewall": {
            "type": "object",
            "defaultValue": {
                "name": "AzureFirewall",
                "publicIPAddressName": "pip-firewall",
                "subnetName": "AzureFirewallSubnet",
                "subnetPrefix": "10.0.3.0/26",
                "routeName": "r-nexthop-to-fw"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        }
    },
    "variables": {
        "logAnalyticsWorkspace": "[uniqueString(subscription().subscriptionId, resourceGroup().id)]",
        "peering-name-hub-to-spoke-one": "hub-to-spoke-one",
        "peering-name-hub-to-spoke-two": "hub-to-spoke-two",
        "peering-name-spoke-to-hub-one": "spoke-one-to-hub",
        "peering-name-spoke-to-hub-two": "spoke-two-to-hub",
		"nicNameWindows": "nic-windows-",
		"vmNameWindows": "vm-windows-",
		"windowsOSVersion": "2016-Datacenter",
		"nicNameLinux": "nic-linux-",
		"osVersion": "16.04.0-LTS",
		"vmNameLinux": "vm-linux-"
    },
    "resources": [
        {
            "comments": "Deploys a Log Analytics workspace.",
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2020-03-01-preview",
            "name": "[variables('logAnalyticsWorkspace')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "name": "Free"
                },
                "features": {
                    "searchVersion": 1
                }
            }
        },
        {
            "comments": "Deploys the hub virtual network and configures diagnostic logging.",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('hubNetwork').name]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('hubNetwork').addressPrefix]"
                    ]
                }
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsWorkspace'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name)]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
                        "logs": [
                            {
                                "category": "VMProtectionAlerts",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('hubNetwork').name, '/', parameters('azureFirewall').subnetName)]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name)]"
            ],
            "properties": {
                "addressPrefix": "[parameters('azureFirewall').subnetPrefix]"
            }
        },
        {
            "apiVersion": "2019-11-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('azureFirewall').publicIPAddressName]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2020-05-01",
            "name": "[parameters('azureFirewall').name]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name)]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubNetwork').name, parameters('azureFirewall').subnetName)]",
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('azureFirewall').publicIPAddressName)]"
            ],
            "properties": {
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert",
                "additionalProperties": {},
                "ipConfigurations": [
                    {
                        "name": "[parameters('azureFirewall').name]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('azureFirewall').publicIPAddressName)]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubNetwork').name, parameters('azureFirewall').subnetName)]"
                            }
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsWorkspace'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewall').name)]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
                        "logs": [
                            {
                                "category": "AzureFirewallApplicationRule",
                                "enabled": true
                            },
                            {
                                "category": "AzureFirewallNetworkRule",
                                "enabled": true
                            },
                            {
                                "category": "AzureFirewallDnsProxy",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-05-01",
            "name": "[parameters('azureFirewall').routeName]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewall').name)]"
            ],
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "[parameters('azureFirewall').routeName]",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[reference(resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewall').name), '2020-05-01').ipConfigurations[0].properties.privateIpAddress]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[parameters('spokeNetwork').subnetNsgName]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "bastion-in-vnet",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "[parameters('bastionHost').subnetPrefix]",
                            "destinationPortRanges": [
                                "22",
                                "3389"
                            ],
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsWorkspace'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('spokeNetwork').subnetNsgName)]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
                        "logs": [
                            {
                                "category": "NetworkSecurityGroupEvent",
                                "enabled": true
                            },
                            {
                                "category": "NetworkSecurityGroupRuleCounter",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('spokeNetwork').name]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('spokeNetwork').subnetNsgName)]",
                "[resourceId('Microsoft.Network/routeTables', parameters('azureFirewall').routeName)]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('spokeNetwork').addressPrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('spokeNetwork').subnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('spokeNetwork').subnetPrefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('spokeNetwork').subnetNsgName)]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('azureFirewall').routeName)]"
                            }
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsWorkspace'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeNetwork').name)]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
                        "logs": [
                            {
                                "category": "VMProtectionAlerts",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
{
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[parameters('spokeNetworkTwo').subnetNsgName]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "bastion-in-vnet",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "[parameters('bastionHost').subnetPrefix]",
                            "destinationPortRanges": [
                                "22",
                                "3389"
                            ],
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsWorkspace'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('spokeNetworkTwo').subnetNsgName)]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
                        "logs": [
                            {
                                "category": "NetworkSecurityGroupEvent",
                                "enabled": true
                            },
                            {
                                "category": "NetworkSecurityGroupRuleCounter",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('spokeNetworkTwo').name]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('spokeNetworkTwo').subnetNsgName)]",
                "[resourceId('Microsoft.Network/routeTables', parameters('azureFirewall').routeName)]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('spokeNetworkTwo').addressPrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('spokeNetworkTwo').subnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('spokeNetworkTwo').subnetPrefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('spokeNetworkTwo').subnetNsgName)]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('azureFirewall').routeName)]"
                            }
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsWorkspace'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeNetworkTwo').name)]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
                        "logs": [
                            {
                                "category": "VMProtectionAlerts",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "comments": "Hub > spoke one.",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('hubNetwork').name, '/', variables('peering-name-hub-to-spoke-one'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name)]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeNetwork').name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeNetwork').name)]"
                }
            }
        },
        {
            "comments": "Hub > spoke two.",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('hubNetwork').name, '/', variables('peering-name-hub-to-spoke-two'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name)]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeNetworkTwo').name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeNetworkTwo').name)]"
                }
            }
        },
        {
            "comments": "Spoke one > hub",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('spokeNetwork').name, '/', variables('peering-name-spoke-to-hub-one'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name)]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeNetwork').name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name)]"
                }
            }
        },
        {
            "comments": "Spoke two > hub",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('spokeNetworkTwo').name, '/', variables('peering-name-spoke-to-hub-two'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name)]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeNetworkTwo').name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": false,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name)]"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-05-01",
            "name": "[parameters('bastionHost').publicIPAddressName]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[parameters('bastionHost').nsgName]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "bastion-in-allow",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "Internet",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "bastion-control-in-allow",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "bastion-in-host",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRanges": [
                                "8080",
                                "5701"
                            ],
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "bastion-vnet-out-allow",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRanges": [
                                "22",
                                "3389"
                            ],
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "bastion-azure-out-allow",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "AzureCloud",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "bastion-out-host",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRanges": [
                                "8080",
                                "5701"
                            ],
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "bastion-out-deny",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Outbound"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsWorkspace'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('bastionHost').nsgName)]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
                        "logs": [
                            {
                                "category": "NetworkSecurityGroupEvent",
                                "enabled": true
                            },
                            {
                                "category": "NetworkSecurityGroupRuleCounter",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('hubNetwork').name, '/', parameters('bastionHost').subnetName)]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('bastionHost').nsgName)]"
            ],
            "properties": {
                "addressPrefix": "[parameters('bastionHost').subnetPrefix]",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('bastionHost').nsgName)]"
                }
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2020-06-01",
            "name": "[parameters('bastionHost').name]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses', parameters('bastionHost').publicIPAddressName)]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubNetwork').name, parameters('bastionHost').subnetName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubNetwork').name, parameters('bastionHost').subnetName)]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('bastionHost').publicIPAddressName)]"
                            }
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsWorkspace'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/bastionHosts', parameters('bastionHost').name)]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
                        "logs": [
                            {
                                "category": "BastionAuditLogs",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "condition": "[parameters('deployVpnGateway')]",
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('hubNetwork').name, '/', parameters('vpnGateway').subnetName)]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name)]"
            ],
            "properties": {
                "addressPrefix": "[parameters('vpnGateway').subnetPrefix]"
            }
        },
        {
            "condition": "[parameters('deployVpnGateway')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "name": "[parameters('vpnGateway').pipName]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "condition": "[parameters('deployVpnGateway')]",
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "2019-11-01",
            "name": "[parameters('vpnGateway').name]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('vpnGateway').pipName)]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubNetwork').name, parameters('vpnGateway').subnetName)]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubNetwork').name, parameters('vpnGateway').subnetName)]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('vpnGateway').pipName)]"
                            }
                        },
                        "name": "vnetGatewayConfig"
                    }
                ],
                "sku": {
                    "name": "Basic",
                    "tier": "Basic"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": false
            },
            "resources": [
                {
                    "condition": "[parameters('deployVpnGateway')]",
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsWorkspace'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vpnGateway').name)]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
                        "logs": [
                            {
                                "category": "GatewayDiagnosticLog",
                                "enabled": true
                            },
                            {
                                "category": "TunnelDiagnosticLog",
                                "enabled": true
                            },
                            {
                                "category": "RouteDiagnosticLog",
                                "enabled": true
                            },
                            {
                                "category": "IKEDiagnosticLog",
                                "enabled": true
                            },
                            {
                                "category": "P2SDiagnosticLog",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
		{
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2020-05-01",
			"name": "[concat(variables('nicNameWindows'), copyIndex())]",
			"location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeNetwork').name)]"
            ],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('spokeNetwork').name, parameters('spokeNetwork').subnetName)]"
							}
						}
					}
				]
			},
			"copy": {
				"name": "niccopy",
				"count": "[parameters('windowsVMCount')]"
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines",
			"apiVersion": "2019-07-01",
			"name": "[concat(variables('vmNameWindows'), copyIndex())]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat(variables('nicNameWindows'), copyIndex())]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"osProfile": {
					"computerName": "[concat(variables('vmNameWindows'), copyIndex())]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "MicrosoftWindowsServer",
						"offer": "WindowsServer",
						"sku": "[variables('windowsOSVersion')]",
						"version": "latest"
					},
					"osDisk": {
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicNameWindows'), copyIndex()))]"
						}
					]
				}
			},
			"copy": {
				"name": "vmcopy",
				"count": "[parameters('windowsVMCount')]"
			}
		},
		{
			"type": "Microsoft.Network/networkInterfaces",
			"apiVersion": "2020-05-01",
			"name": "[concat(variables('nicNameLinux'), copyIndex())]",
			"location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeNetwork').name)]"
            ],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('spokeNetwork').name, parameters('spokeNetwork').subnetName)]"
							}
						}
					}
				]
			},
			"copy": {
				"name": "niccopy",
				"count": "[parameters('linuxVMCount')]"
			}
		},
		{
			"type": "Microsoft.Compute/virtualMachines",
			"apiVersion": "2019-07-01",
			"name": "[concat(variables('vmNameLinux'), copyIndex())]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat(variables('nicNameLinux'), copyIndex())]"
			],
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('vmSize')]"
				},
				"osProfile": {
					"computerName": "[concat(variables('vmNameLinux'), copyIndex())]",
					"adminUsername": "[parameters('adminUsername')]",
					"adminPassword": "[parameters('adminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "Canonical",
						"offer": "UbuntuServer",
						"sku": "[variables('osVersion')]",
						"version": "latest"
					},
					"osDisk": {
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"networkInterfaces": [
						{
							"id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicNameLinux'), copyIndex()))]"
						}
					]
				}
			},
			"copy": {
				"name": "vmcopy",
				"count": "[parameters('linuxVMCount')]"
			}
		}
    ]
}