{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUserName": {
            "type": "string",
            "metadata": {
                "description": "The admin user name for both the Windows and Linux virtual machines."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The admin password for both the Windows and Linux virtual machines."
            }
        },
        "vmCount": {
            "type": "int",
            "defaultValue": 3,
            "metadata": {
                "description": "The count of Windows virtual machines to create."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_DS3_v2"
        },
        "azureNetwork": {
            "type": "object",
            "defaultValue": {
                "name": "ra-aad-ntier-vnet",
                "addressPrefix": "10.0.0.0/16",
                "webSubnetName": "web",
                "webSubnetPrefix": "10.0.1.0/24",
                "webSubnetNsgName": "ra-aad-ntier-web-nsg",
                "bizSubnetName": "biz",
                "bizSubnetPrefix": "10.0.2.0/24",
                "bizSubnetNsgName": "ra-aad-ntier-biz-nsg",
                "dataSubnetName": "data",
                "dataSubnetPrefix": "10.0.3.0/24",
                "dataSubnetNsgName": "ra-aad-ntier-data-nsg"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        }
    },
    "variables": {
        "nicNameWeb": "ra-aad-web-nic",
        "vmNameWeb": "ra-aad-web-vm",
        "nicNameBiz": "ra-aad-biz-nic",
        "vmNameBiz": "ra-aad-biz-vm",
        "nicNameData": "ra-aad-data-nic",
        "vmNameData": "ra-aad-data-vm",
        "windowsOSVersion": "2012-R2-Datacenter",
        "moduleUrl": "https://github.com/mspnp/identity-reference-architectures/raw/master/azure-ad/extensions/iisaspnet.ps1.zip"
    },
    "resources": [
        {
            "comments": "Network security group + rules for spoke network and diagnostic configuration",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[parameters('azureNetwork').webSubnetNsgName]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-http-traffic-from-external",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-http-traffic-from-vnet",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "10.0.0.0/16",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "comments": "Network security group + rules for spoke network and diagnostic configuration",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[parameters('azureNetwork').bizSubnetNsgName]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-web-traffic",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            // fix this
                            "sourceAddressPrefix": "10.0.1.0/24",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "comments": "Network security group + rules for spoke network and diagnostic configuration",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[parameters('azureNetwork').dataSubnetNsgName]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-biz-traffic",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "9042",
                            // Fix this
                            "sourceAddressPrefix": "10.0.2.0/24",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "comments": "Hub virtual network and diagnostic configuration",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('azureNetwork').name]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('azureNetwork').webSubnetNsgName)]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('azureNetwork').bizSubnetNsgName)]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('azureNetwork').dataSubnetNsgName)]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('azureNetwork').addressPrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('azureNetwork').webSubnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('azureNetwork').webSubnetPrefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('azureNetwork').webSubnetNsgName)]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('azureNetwork').bizSubnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('azureNetwork').bizSubnetPrefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('azureNetwork').bizSubnetNsgName)]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('azureNetwork').dataSubnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('azureNetwork').dataSubnetPrefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('azureNetwork').dataSubnetNsgName)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('nicNameWeb'), copyIndex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('azureNetwork').name)]",
                "[resourceId('Microsoft.Network/loadBalancers', 'testlb')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('azureNetwork').name, parameters('azureNetwork').webSubnetName)]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'testlb', 'web-lb-bep1')]"
                                }
                            ]
                        }
                    }
                ]
            },
            "copy": {
                "name": "niccopy",
                "count": "[parameters('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('vmNameWeb'), copyIndex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat(variables('nicNameWeb'), copyIndex())]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmNameWeb'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[variables('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "[concat('testdatadisk', copyIndex())]",
                            "createOption": "Empty",
                            "caching": "None",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            },
                            "diskSizeGB": 127,
                            "toBeDetached": false
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicNameWeb'), copyIndex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "name": "DSCExt1",
                    "type": "extensions",
                    "location": "[resourceGroup().location]",
                    "apiVersion": "2015-05-01-preview",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('vmNameWeb'), copyIndex()))]"
                    ],
                    "tags": {
                        "displayName": "DSCExt1"
                    },
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.19",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "modulesUrl": "[variables('moduleUrl')]",
                            "configurationFunction": "iisaspnet.ps1\\iisaspnet"
                        },
                        "protectedSettings": {}
                    }
                }
            ],
            "copy": {
                "name": "vmcopy",
                "count": "[parameters('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('nicNameBiz'), copyIndex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('azureNetwork').name)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('azureNetwork').name, parameters('azureNetwork').bizSubnetName)]"
                            }
                        }
                    }
                ]
            },
            "copy": {
                "name": "niccopy2",
                "count": "[parameters('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('vmNameBiz'), copyIndex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat(variables('nicNameBiz'), copyIndex())]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmNameBiz'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[variables('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "[concat('testdatadisk2', copyIndex())]",
                            "createOption": "Empty",
                            "caching": "None",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            },
                            "diskSizeGB": 127,
                            "toBeDetached": false
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicNameBiz'), copyIndex()))]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "vmcopy2",
                "count": "[parameters('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('nicNameData'), copyIndex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('azureNetwork').name)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('azureNetwork').name, parameters('azureNetwork').dataSubnetName)]"
                            }
                        }
                    }
                ]
            },
            "copy": {
                "name": "niccopy3",
                "count": "[parameters('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('vmNameData'), copyIndex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat(variables('nicNameData'), copyIndex())]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmNameData'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[variables('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "[concat('testdatadisk3', copyIndex())]",
                            "createOption": "Empty",
                            "caching": "None",
                            "managedDisk": {
                                "storageAccountType": "Premium_LRS"
                            },
                            "diskSizeGB": 127,
                            "toBeDetached": false
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicNameData'), copyIndex()))]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "vmcopy3",
                "count": "[parameters('vmCount')]"
            }
        },
        {
            "name": "publicIPAddress1",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2020-05-01",
            "name": "testlb",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', 'publicIPAddress1')]"
            ],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "testlb",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'publicIPAddress1')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "web-lb-bep1"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "web-lbr1",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', 'testlb', 'testlb')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "disableOutboundSnat": false,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'testlb', 'web-lb-bep1')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', 'testlb'), '/probes/web-lbp1')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "web-lbp1",
                        "properties": {
                            "protocol": "Http",
                            "port": 80,
                            "requestPath": "/",
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        }
    ]
}
