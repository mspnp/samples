variables:
- name: serviceConnection
  value: azure-service-connection-mg
- name: resource-group
  value: hub-spoke-$(Build.BuildId)
- name: location
  value: eastus
- name: pester-script-location
  value: '/solutions/basic-web-app/Test.ARMTemplate.ps1'
- name: template-location
  value: '/solutions/basic-web-app/*'
- name: template-name
  value: 'azuredeploy.json'  
- name: ttk-skip-test
  value: 'IDs-Should-Be-Derived-From-ResourceIDs'

trigger:
  branches:
    include:
    - master
  paths:
    include:
      - '/solutions/basic-web-app/*'
    exclude:
      - '/solutions/basic-web-app/README.md'
      
pr:
  branches:
    include:
    - master
  paths:
    include:
      - '/solutions/basic-web-app/*'
    exclude:
      - '/solutions/basic-web-app/README.md'

schedules:
- cron: "0 12 * * 0"
  displayName: Weekly Sunday build
  branches:
    include:
    - master
  always: true
      
stages:

# Run ARM TTK and publish test results (Windows only)
- stage: armTemplateToolkit

  jobs:
  - job: armttk
    pool:
      vmImage: 'windows-latest'
    continueOnError: false
    timeoutInMinutes: 20

    steps:

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          git clone https://github.com/Azure/arm-ttk.git --quiet $env:BUILD_ARTIFACTSTAGINGDIRECTORY\arm-ttk
          import-module $env:BUILD_ARTIFACTSTAGINGDIRECTORY\arm-ttk\arm-ttk
          Install-Module Pester -AllowClobber -RequiredVersion 4.10.1 -Force -SkipPublisherCheck -AcceptLicense
          Import-Module Pester -RequiredVersion 4.10.1 -ErrorAction Stop
          $results = Invoke-Pester -Script  @{Path = $(System.DefaultWorkingDirectory)$(pester-script-location); Parameters = @{TemplatePath = $(System.DefaultWorkingDirectory)$(template-location)} -OutputFormat NUnitXml -OutputFile $env:BUILD_ARTIFACTSTAGINGDIRECTORY\TEST-ARMTemplate.xml -PassThru

    # - task: PublishTestResults@2
    #   inputs:
    #     testResultsFormat: 'NUnit'
    #     testResultsFiles: '$(System.DefaultWorkingDirectory)\*-armttk.xml'
    #   condition: always()

