{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUserName": {
            "type": "string",
            "metadata": {
               "description": "The admin user name for both the Windows and Linux virtual machines."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
               "description": "The admin password for both the Windows and Linux virtual machines."
            }
        },
        "emailAddress": {
            "type": "string",
            "metadata": {
               "description": "The email address configured in the Action Group for receiving non-compliance notifications"
            }
        },
        "windowsVMCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
               "description": "The number of Azure Windows VMs to be deployed as web servers, configured via Desired State Configuration to install IIS."
            }
        },
        "linuxVMCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
               "description": "The number of Azure Linux VMs to be deployed as web servers, configured via Desired State Configuration to install NGINX."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A4_v2",
            "metadata": {
               "description": "The Azure VM size. Defaults to an optimally balanced for general purpose, providing sufficient performance for deploying IIS on Windows and NGINX on Linux in testing environments."
            }
        },
        "windowsConfiguration": {
            "type": "object",
            "defaultValue": {
                "name": "windowsfeatures",
                "description": "A configuration for installing IIS.",
                "script": "https://raw.githubusercontent.com/mspnp/samples/main/solutions/azure-automation-state-configuration/scripts/windows-config.ps1"
            },
            "metadata": {
               "description": "The DSC configuration object containing a reference to the script that defines the desired state for Windows VMs. By default, it points to a PowerShell script that installs IIS for testing purposes as desired state of the system."
            }
        },
        "linuxConfiguration": {
            "type": "object",
            "defaultValue": {
                "name": "linuxpackage",
                "description": "A configuration for installing Nginx.",
                "script": "https://raw.githubusercontent.com/mspnp/samples/main/solutions/azure-automation-state-configuration/scripts/linux-config.ps1"
            },
            "metadata": {
               "description": "The DSC configuration object containing a reference to the script that defines the desired state for Linux VMs. By default, it points to a PowerShell script that installs NGINX for testing purposes as desired state of the system."
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "virtial-network",
            "metadata": {
               "description": "The Virtual Network name"
            }
        },
        "addressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
               "description": "The Virtual Network address space"
            }
        },
        "subnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
               "description": "The Virtual Network subnet address space"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "subnet",
            "metadata": {
               "description": "The Virtual Network Subnet name"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
               "description": "Azure Virtual Machines, and supporting services (Automation State Configuration) region. This defaults to the resource group's location for higher reliability."
            }
        }
    },
    "variables": {
        "logAnalyticsName": "[uniqueString(resourceGroup().id)]",
        "automationAccountName": "[uniqueString(resourceGroup().id)]",
        "moduleUri": "https://devopsgallerystorage.blob.core.windows.net/packages/nx.1.0.0.nupkg",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]",
        "alertQuery": "AzureDiagnostics\n| where Category == \"DscNodeStatus\"\n| where ResultType == \"Failed\"",
        "windowsNicName": "windows-nic-",
        "windowsPIPName": "windows-pip-",
        "windowsVMName": "windows-vm-",
        "windowsOSVersion": "2016-Datacenter",
        "linuxNicName": "linux-nic-",
        "linuxPIPName": "linux-pip-",
        "linuxVMNAme": "linux-vm-",
        "osVersion": "16.04.0-LTS"
    },
    "resources": [
        {
            // "This is a storage account for storing data."
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2023-09-01",
            "name": "[variables('logAnalyticsName')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                },
                "features": {
                    "searchVersion": 1
                }
            }
        },
        {
            // The Log Analytics workspace saved search to monitor Virtual Machines with Non-Compliant DSC status.
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2023-09-01",
            "name": "[concat(variables('logAnalyticsName'), '/91192b47-5f04-4215-a142-1fcb2b1622b1')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]"
            ],
            "properties": {
                "Category": "event",
                "DisplayName": "Non Compliant DSC Node",
                "Query": "[variables('alertQuery')]",
                "Version": 2
            }
        },
        {
            // The Log Analytics workspace scheduled query rule that trigger alerts based on Virtual Machines with Non-Compliant DSC status.
            "type": "microsoft.insights/scheduledqueryrules",
            "apiVersion": "2024-01-01-preview",
            "name": "non-compliant-dsc",
            "location": "[parameters('location')]",
            "properties": {
                "severity": 3,
                "enabled": true,
                "evaluationFrequency" :"PT5M",
                "scopes": [
                    "[resourceId('microsoft.operationalinsights/workspaces', variables('logAnalyticsName'))]"
                ],
                "windowSize": "PT5M",
                "criteria":{
                    "allOf": [
                        {
                            "query":"[variables('alertQuery')]",
                            "timeAggregation": "Count",
                            "operator": "GreaterThan",
                            "threshold": 0,
                            "failingPeriods": {
                                "minFailingPeriodsToAlert":1,
                                "numberOfEvaluationPeriods":1
                            }
                        }
                    ]
                },
                "actions": {
                    "actionGroups": [
                        "[resourceId('microsoft.insights/actionGroups','email-action')]"
                    ]
                }
            }
        },
        {
            // The Action Group responsible for sending email notifications when Non-Compliant DSC alerts are triggered.
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2024-10-01-preview",
            "name": "email-action",
            "location": "Global",
            "properties": {
                "groupShortName": "emailService",
                "enabled": true,
                "emailReceivers": [
                    {
                        "name": "emailAction",
                        "emailAddress": "[parameters('emailAddress')]",
                        "useCommonAlertSchema": false
                    }
                ]
            }
        },
        {
            // The Automation Account to deliver consistent management across your Azure Windows and Linux Virtual Machines.
            "name": "[variables('automationAccountName')]",
            "type": "Microsoft.Automation/automationAccounts",
            "apiVersion": "2023-05-15-preview",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "name": "Basic"
                }
            },
            "resources": [
                {
                    // Azure Automation module with DSC Resources for Linux
                    "name": "nx",
                    "type": "modules",
                    "apiVersion": "2023-05-15-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'))]",
                        "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
                    ],
                    "properties": {
                        "contentLink": {
                            "uri": "[variables('moduleUri')]"
                        }
                    }
                },
                {
                    // The Automation Account configuration for managing Linux DSC.
                    "name": "[parameters('linuxConfiguration').name]",
                    "type": "configurations",
                    "apiVersion": "2023-05-15-preview",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                        "[resourceId('Microsoft.Automation/automationAccounts',variables('automationAccountName'))]"
                    ],
                    "properties": {
                        "logVerbose": false,
                        "description": "[parameters('linuxConfiguration').description]",
                        "state": "Published",
                        "overwrite": "true",
                        "source": {
                            "type": "uri",
                            "value": "[parameters('linuxConfiguration').script]"
                        }
                    }
                },
                {
                    // The Automation Account compilation job for Linux DSC.
                    "name": "[parameters('linuxConfiguration').name]",
                    "type": "compilationjobs",
                    "apiVersion": "2023-05-15-preview",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                        "[resourceId('Microsoft.Automation/automationAccounts/configurations', variables('automationAccountName'), parameters('linuxConfiguration').name)]",
                        "[resourceId('Microsoft.Automation/automationAccounts/modules', variables('automationAccountName'), 'nx')]",
                        "[resourceId('Microsoft.Automation/automationAccounts',variables('automationAccountName'))]"
                    ],
                    "properties": {
                        "configuration": {
                            "name": "[parameters('linuxConfiguration').name]"
                        }
                    }
                },
                {
                    // The Automation Account configuration for managing Windows DSC.
                    "name": "[parameters('windowsConfiguration').name]",
                    "type": "configurations",
                    "apiVersion": "2023-05-15-preview",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                        "[resourceId('Microsoft.Automation/automationAccounts',variables('automationAccountName'))]"
                    ],
                    "properties": {
                        "logVerbose": false,
                        "description": "[parameters('windowsConfiguration').description]",
                        "state": "Published",
                        "overwrite": "true",
                        "source": {
                            "type": "uri",
                            "value": "[parameters('windowsConfiguration').script]"
                        }
                    }
                },
                {
                    // The Automation Account compilation job for Windows DSC.
                    "name": "[parameters('windowsConfiguration').name]",
                    "type": "compilationjobs",
                    "apiVersion": "2023-05-15-preview",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                        "[resourceId('Microsoft.Automation/automationAccounts/configurations', variables('automationAccountName'), parameters('windowsConfiguration').name)]",
                        "[resourceId('Microsoft.Automation/automationAccounts',variables('automationAccountName'))]"
                    ],
                    "properties": {
                        "configuration": {
                            "name": "[parameters('windowsConfiguration').name]"
                        }
                    }
                },
                {
                    // A diagnostic setting for the Automation Account that emits DSC Node Status logs. It is configured to enable log collection for monitoring and analysis, supporting the creation of saved and scheduled queries for alerting purposes.
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsName'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]",
                        "[resourceId('Microsoft.Automation/automationAccounts',variables('automationAccountName'))]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]",
                        "logs": [
                            {
                                "category": "DscNodeStatus",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            // Network security group to control traffic on the vnet
            "comments": "Network security group + rules for spoke network and diagnostic configuration",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-05-01",
            "name": "nsg",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "HTTP",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "80",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            },
            "resources": [
                {
                    
                    // Network Security Group log
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2021-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsName'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]",
                        "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg')]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsName'))]",
                        "logs": [
                            {
                                "category": "NetworkSecurityGroupEvent",
                                "enabled": true
                            },
                            {
                                "category": "NetworkSecurityGroupRuleCounter",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            // Virtual Network
            "apiVersion":"2024-05-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                }
            }
        },
        {
            // Virtual Network subnet
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-05-01",
            "name": "[concat(parameters('virtualNetworkName'), '/', parameters('subnetName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('subnetPrefix')]",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg')]"
                }
            }
        },
        {
            // Public IPs for Window VMs
            "apiVersion": "2024-05-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('windowsPIPName'), copyIndex())]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            },
            "copy": {
                "name": "pipcopy",
                "count": "[parameters('windowsVMCount')]"
            }
        },
        {
            // Network Interfaces for Windows VMs
            "apiVersion": "2024-05-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('windowsNicName'), copyIndex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', concat(variables('windowsPIPName'), copyIndex()))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses/', concat(variables('windowsPIPName'), copyIndex()))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            },
            "copy": {
                "name": "niccopy",
                "count": "[parameters('windowsVMCount')]"
            }
        },
        {
            // The Windows VMs managed by DSC. By default, these virtual machines are configured to enforce the desired state using the DSC VM extension, ensuring consistency and compliance.
            "apiVersion": "2024-11-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('windowsVMName'), copyIndex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat(variables('windowsNicName'), copyIndex())]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('windowsVMName'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[variables('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('windowsNicName'), copyIndex()))]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "vmcopy",
                "count": "[parameters('windowsVMCount')]"
            }
        },
        {
            // Windows VM PowerShell DSC extension
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('windowsVMName'), copyIndex(), '/Microsoft.Powershell.DSC')]",
            "apiVersion": "2024-11-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('windowsVMName'), copyIndex())]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.76",
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                    "Items": {
                        "registrationKeyPrivate": "[listKeys(resourceId('Microsoft.Automation/automationAccounts/', variables('automationAccountName')), '2019-06-01').Keys[0].value]"
                    }
                },
                "settings": {
                    "Properties": [
                        {
                            "Name": "RegistrationKey",
                            "Value": {
                                "UserName": "PLACEHOLDER_DONOTUSE",
                                "Password": "PrivateSettingsRef:registrationKeyPrivate"
                            },
                            "TypeName": "System.Management.Automation.PSCredential"
                        },
                        {
                            "Name": "RegistrationUrl",
                            "Value": "[reference(concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'))).registrationUrl]",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "NodeConfigurationName",
                            "Value": "[concat(parameters('windowsConfiguration').name, '.localhost')]",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "ConfigurationMode",
                            "Value": "ApplyAndMonitor",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "ConfigurationModeFrequencyMins",
                            "Value": 15,
                            "TypeName": "System.Int32"
                        },
                        {
                            "Name": "RefreshFrequencyMins",
                            "Value": 30,
                            "TypeName": "System.Int32"
                        },
                        {
                            "Name": "RebootNodeIfNeeded",
                            "Value": true,
                            "TypeName": "System.Boolean"
                        },
                        {
                            "Name": "ActionAfterReboot",
                            "Value": "ContinueConfiguration",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "AllowModuleOverwrite",
                            "Value": false,
                            "TypeName": "System.Boolean"
                        }
                    ]
                }
            },
            "copy": {
                "name": "dsccopy",
                "count": "[parameters('windowsVMCount')]"
            }
        },
        {
            // Public IPs for Linux VMs
            "apiVersion": "2024-05-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('linuxPIPName'), copyIndex())]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            },
            "copy": {
                "name": "pipcopy",
                "count": "[parameters('linuxVMCount')]"
            }
        },
        {
            // Network Interfaces for Linux VMs
            "apiVersion": "2024-05-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('linuxNicName'), copyIndex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', concat(variables('linuxPIPName'), copyIndex()))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses/', concat(variables('linuxPIPName'), copyIndex()))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            },
            "copy": {
                "name": "niccopy",
                "count": "[parameters('linuxVMCount')]"
            }
        },
        {
            // The Linux VMs managed by DSC. By default, these virtual machines are configured to enforce the desired state using the DSC VM extension, ensuring consistency and compliance.
            "apiVersion": "2024-11-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('linuxVMNAme'), copyIndex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat(variables('linuxNicName'), copyIndex())]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('linuxVMNAme'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "[variables('osVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('linuxNicName'), copyIndex()))]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "vmcopy",
                "count": "[parameters('linuxVMCount')]"
            }
        },
        {
            // Linux VM DSC extension
            "apiVersion": "2024-11-01",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('linuxVMNAme'), copyIndex(),'/enabledsc')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('linuxVMNAme'), copyIndex())]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "DSCForLinux",
                "typeHandlerVersion": "2.7",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "ExtensionAction": "Register",
                    "NodeConfigurationName": "[concat(parameters('linuxConfiguration').name, '.localhost')]",
                    "RefreshFrequencyMins": 30,
                    "ConfigurationMode": "applyAndAutoCorrect",
                    "ConfigurationModeFrequencyMins": 15,
                    "RegistrationUrl": "[reference(concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'))).registrationUrl]"
                },
                "protectedSettings": {
                    "RegistrationKey": "[listKeys(resourceId('Microsoft.Automation/automationAccounts/', variables('automationAccountName')), '2019-06-01').Keys[0].value]"
                }
            },
            "copy": {
                "name": "vmcopy",
                "count": "[parameters('linuxVMCount')]"
            }
        }
    ]
}