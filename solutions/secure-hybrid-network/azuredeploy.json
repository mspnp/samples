{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "mocOnPremResourceGroup": {
            "type": "string",
            "defaultValue": "202-secure-network-on-prem"
        },
        "azureNetworkResourceGroup": {
            "type": "string",
            "defaultValue": "202-secure-network-on-azure"
        },
        "adminUserName": {
            "type": "string",
            "metadata": {
                "description": "The admin user name for both the Windows and Linux virtual machines."
            },
            "defaultValue": "azureadmin"
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The admin password for both the Windows and Linux virtual machines."
            },
            "defaultValue": "Password2020!"
        }
    },
    "variables": {
        "mocOnPremTemplate": "https://raw.githubusercontent.com/neilpeterson/samples/site-to-site-demo/solutions/secure-hybrid-network/nestedtemplates/mock-onprem-azuredeploy.json",
        "azureVirtualNetworkTemplate": "https://raw.githubusercontent.com/neilpeterson/samples/site-to-site-demo/solutions/secure-hybrid-network/nestedtemplates/azure-network-azuredeploy.json",
        "mocOnPremLocalGatewayTemplate": "https://raw.githubusercontent.com/neilpeterson/samples/site-to-site-demo/solutions/secure-hybrid-network/nestedtemplates/mock-onprem-local-gateway.json",
        "azureVirtualNetworkLocalGatewayTemplate": "https://raw.githubusercontent.com/neilpeterson/samples/site-to-site-demo/solutions/secure-hybrid-network/nestedtemplates/azure-network-local-gateway.json"

    },
    "resources": [
        {
            "name": "[parameters('mocOnPremResourceGroup')]",
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2019-10-01",
            "location": "eastus"
        },
        {
            "name": "[parameters('azureNetworkResourceGroup')]",
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2019-10-01",
            "location": "eastus"
        },
        {
            "name": "onPremMock",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "resourceGroup": "[parameters('mocOnPremResourceGroup')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', parameters('mocOnPremResourceGroup'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('mocOnPremTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    }
                }
            }
        },
        {
            "name": "azureNetwork",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "resourceGroup": "[parameters('azureNetworkResourceGroup')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', parameters('azureNetworkResourceGroup'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('azureVirtualNetworkTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    }
                }
            }
        },
        {
            "name": "mockOnPremLocalGateway",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "resourceGroup": "[parameters('mocOnPremResourceGroup')]",
            "dependsOn": [
                "azureNetwork",
                "onPremMock"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('mocOnPremLocalGatewayTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "gatewayIpAddress": {
                        "value": "[reference('azureNetwork').outputs.vpnIp.value]"
                    },
                    "azureCloudVnetPrefix": {
                        "value": "[reference('azureNetwork').outputs.mocOnpremNetwork.value]"
                    },
                    "mocOnpremGatewayName": {
                        "value": "[reference('onPremMock').outputs.mocOnpremGatewayName.value]"
                    }
                }
            }
        },
        {
            "name": "azureNetworkLocalGateway",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "resourceGroup": "[parameters('azureNetworkResourceGroup')]",
            "dependsOn": [
                "azureNetwork",
                "onPremMock"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('azureVirtualNetworkLocalGatewayTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "gatewayIpAddress": {
                        "value": "[reference('onPremMock').outputs.vpnIp.value]"
                    },
                    "azureCloudVnetPrefix": {
                        "value": "[reference('onPremMock').outputs.mocOnpremNetworkPrefix.value]"
                    },
                    "azureNetworkGatewayName": {
                        "value": "[reference('azureNetwork').outputs.azureGatewayName.value]"
                    }
                }
            }
        }
    ]
}