{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUserName": {
            "type": "string",
            "defaultValue": "azureadmin",
            "metadata": {
                "description": "The admin user name for both the Windows and Linux virtual machines."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The admin password for both the Windows and Linux virtual machines."
            }
        },
        // "mocOnPremVnetPrefix": {
        //     "type": "string",
        //     "defaultValue": "192.168.1.128/25"
        // },
        "vmCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "The count of Windows virtual machines to create."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_DS3_v2"
        },
        "azureNetwork": {
            "type": "object",
            "defaultValue": {
                "name": "ra-aad-ntier-vnet",
                "addressPrefix": "10.0.0.0/16",
                "webSubnetName": "web",
                "webSubnetPrefix": "10.0.1.0/24",
                "webSubnetNsgName": "ra-aad-ntier-web-nsg"
            }
        },
        "azureGateway": {
            "type": "object",
            "defaultValue": {
                "name": "onprem-vpn-lgw",
                "subnetName": "GatewaySubnet",
                "subnetPrefix": "10.0.255.224/27",
                "pipName": "onprem-vpn-gateway-pip"
            }
        },
        "azureFirewall": {
            "type": "object",
            "defaultValue": {
                "name": "AzureFirewall",
                "subnetName": "AzureFirewallSubnet",
                "subnetPrefix": "10.0.4.0/24",
                "routeName": "r-nexthop-to-fw",
                "publicIPAddressName": "pip-firewall"
            }
        },
        "bastionHost": {
            "type": "object",
            "defaultValue": {
                "name": "AzureBastionHost",
                "publicIPAddressName": "pip-bastion",
                "subnetName": "AzureBastionSubnet",
                "nsgName": "nsg-hub-bastion",
                "subnetPrefix": "10.0.254.0/27"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        }
    },
    "variables": {
        "nicNameWeb": "ra-aad-web-nic",
        "vmNameWeb": "ra-aad-web-vm",
        "windowsOSVersion": "2012-R2-Datacenter"
    },
    "resources": [
        {
            "comments": "Hub virtual network and diagnostic configuration",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('azureNetwork').name]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('azureNetwork').webSubnetNsgName)]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('azureNetwork').addressPrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('azureGateway').subnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('azureGateway').subnetPrefix]"
                        }
                    },
                    {
                        "name": "[parameters('azureFirewall').subnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('azureFirewall').subnetPrefix]"
                        }
                    },
                    {
                        "name": "[parameters('azureNetwork').webSubnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('azureNetwork').webSubnetPrefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('azureNetwork').webSubnetNsgName)]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('bastionHost').subnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('bastionHost').subnetPrefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('bastionHost').nsgName)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "comments": "Public IP address for Bastion",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-05-01",
            "name": "[parameters('bastionHost').publicIPAddressName]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "comments": "Network security group, rules for Bastion",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[parameters('bastionHost').nsgName]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "bastion-in-allow",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "Internet",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "bastion-control-in-allow",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "bastion-in-host",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRanges": [
                                "8080",
                                "5701"
                            ],
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "bastion-vnet-out-allow",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRanges": [
                                "22",
                                "3389"
                            ],
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "bastion-azure-out-allow",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "AzureCloud",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "bastion-out-host",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRanges": [
                                "8080",
                                "5701"
                            ],
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "bastion-out-deny",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        },
        {
            "comments": "Azure Bastion and diagnostic configuration",
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2020-06-01",
            "name": "[parameters('bastionHost').name]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('azureNetwork').name)]",
                "[resourceId('Microsoft.Network/publicIpAddresses', parameters('bastionHost').publicIPAddressName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('azureNetwork').name, parameters('bastionHost').subnetName)]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('bastionHost').publicIPAddressName)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "comments": "Public IP address for VPN Gateway",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "name": "[parameters('azureGateway').pipName]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "comments": "VPN Gateway",
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "2019-11-01",
            "name": "[parameters('azureGateway').name]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('azureNetwork').name)]",
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('azureGateway').pipName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('azureNetwork').name, parameters('azureGateway').subnetName)]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('azureGateway').pipName)]"
                            }
                        },
                        "name": "vnetGatewayConfig"
                    }
                ],
                "sku": {
                    "name": "Basic",
                    "tier": "Basic"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": false
            }
        },
        // {
        //     "type": "Microsoft.Network/localNetworkGateways",
        //     "apiVersion": "2020-05-01",
        //     "name": "localnwgateway",
        //     "location": "eastus",
        //     "properties": {
        //         "localNetworkAddressSpace": {
        //             "addressPrefixes": [
        //                 "[parameters('mocOnPremVnetPrefix')]"
        //             ]
        //         },
        //         // Figure out how to populate
        //         "gatewayIpAddress": "1.1.1.1"
        //     }
        // },
        // {
        //     "type": "Microsoft.Network/connections",
        //     "apiVersion": "2020-05-01",
        //     "name": "connection",
        //     "location": "eastus",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('azureGateway').name)]",
        //         "[resourceId('Microsoft.Network/localNetworkGateways', 'localnwgateway')]"
        //     ],
        //     "properties": {
        //         "virtualNetworkGateway1": {
        //             "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',parameters('azureGateway').name)]"
        //         },
        //         "localNetworkGateway2": {
        //             "id": "[resourceId('Microsoft.Network/localNetworkGateways', 'localnwgateway')]"
        //         },
        //         "connectionType": "IPsec",
        //         "connectionProtocol": "IKEv2",
        //         "routingWeight": 100,
        //         "sharedKey": "123secret",
        //         "enableBgp": false,
        //         "useLocalAzureIpAddress": false,
        //         "usePolicyBasedTrafficSelectors": false,
        //         "ipsecPolicies": [],
        //         "trafficSelectorPolicies": [],
        //         "expressRouteGatewayBypass": false,
        //         "dpdTimeoutSeconds": 0
        //     }
        // },
        {
            "comments": "Public IP address for Azure Firewall",
            "apiVersion": "2019-11-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('azureFirewall').publicIPAddressName]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "comments": "Azure Firewall and diagnostic configuration",
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2020-05-01",
            "name": "[parameters('azureFirewall').name]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('azureNetwork').name)]"
            ],
            "properties": {
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert",
                "additionalProperties": {},
                "ipConfigurations": [
                    {
                        "name": "[parameters('azureFirewall').name]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('azureFirewall').publicIPAddressName)]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('azureNetwork').name, parameters('azureFirewall').subnetName)]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "comments": "Network security group + rules for spoke network and diagnostic configuration",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[parameters('azureNetwork').webSubnetNsgName]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-http-traffic-from-external",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-http-traffic-from-vnet",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "10.0.0.0/16",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('nicNameWeb'), copyIndex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('azureNetwork').name)]",
                "[resourceId('Microsoft.Network/loadBalancers', 'testlb')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('azureNetwork').name, parameters('azureNetwork').webSubnetName)]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'testlb', 'web-lb-bep1')]"
                                }
                            ]
                        }
                    }
                ]
            },
            "copy": {
                "name": "niccopy",
                "count": "[parameters('vmCount')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('vmNameWeb'), copyIndex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat(variables('nicNameWeb'), copyIndex())]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmNameWeb'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[variables('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicNameWeb'), copyIndex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {

                    "type": "extensions",
                    "apiVersion": "2019-12-01",
                    "name": "installIIS",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('vmNameWeb'), copyIndex()))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.7",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "commandToExecute": "powershell.exe Install-WindowsFeature -name Web-Server -IncludeManagementTools"
                        }
                    }

                }
            ],
            "copy": {
                "name": "vmcopy",
                "count": "[parameters('vmCount')]"
            }
        },
        // {
        //     "comments": "Route / force tunnel from spokes to Azure firewall",
        //     "type": "Microsoft.Network/routeTables",
        //     "apiVersion": "2020-05-01",
        //     "name": "[parameters('azureFirewall').routeName]",
        //     "location": "[parameters('location')]",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewall').name)]"
        //     ],
        //     "properties": {
        //         "disableBgpRoutePropagation": false,
        //         "routes": [
        //             {
        //                 "name": "[parameters('azureFirewall').routeName]",
        //                 "properties": {
        //                     "addressPrefix": "0.0.0.0/0",
        //                     "nextHopType": "VirtualAppliance",
        //                     "nextHopIpAddress": "[reference(resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewall').name), '2020-05-01').ipConfigurations[0].properties.privateIpAddress]"
        //                 }
        //             }
        //         ]
        //     }
        // },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2020-05-01",
            "name": "testlb",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('azureNetwork').name)]"
            ],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "testlb",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('azureNetwork').name, parameters('azureNetwork').webSubnetName)]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "web-lb-bep1"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "web-lbr1",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', 'testlb', 'testlb')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "disableOutboundSnat": false,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'testlb', 'web-lb-bep1')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', 'testlb'), '/probes/web-lbp1')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "web-lbp1",
                        "properties": {
                            "protocol": "Http",
                            "port": 80,
                            "requestPath": "/",
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "vpnIp": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('azureGateway').name)).bgpSettings.bgpPeeringAddresses[0].tunnelIpAddresses[0]]"
        },
        "mocOnpremNetwork": {
            "type": "string",
            "value": "[parameters('azureNetwork').addressPrefix]"
        },
        "azureGatewayName": {
            "type": "string",
            "value": "[parameters('azureGateway').name]"
        }
    }
}
