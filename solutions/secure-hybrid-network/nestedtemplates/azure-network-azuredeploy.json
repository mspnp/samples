{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUserName": {
            "type": "string",
            "defaultValue": "azureadmin"
        },
        "adminPassword": {
            "type": "securestring"
        },
        "windowsVMCount": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "The count of Windows virtual machines to create."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A1_v2"
        },
        "configureSitetosite": {
            "type": "bool",
            "defaultValue": true
        },
        "hubNetwork": {
            "type": "object",
            "defaultValue": {
                "name": "vnet-hub",
                "addressPrefix": "10.0.0.0/20"
            }
        },
        "spokeNetwork": {
            "type": "object",
            "defaultValue": {
                "name": "vnet-spoke",
                "addressPrefix": "10.100.0.0/16",
                "subnetName": "snet-spoke-resources",
                "subnetPrefix": "10.100.0.0/16",
                "subnetNsgName": "nsg-spoke-resources"
            }
        },
        "vpnGateway": {
            "type": "object",
            "defaultValue": {
                "name": "vpn-azure-network",
                "subnetName": "GatewaySubnet",
                "subnetPrefix": "10.0.2.0/27",
                "publicIPAddressName": "pip-vgn-gateway"
            }
        },
        "bastionHost": {
            "type": "object",
            "defaultValue": {
                "name": "AzureBastionHost",
                "subnetName": "AzureBastionSubnet",
                "subnetPrefix": "10.0.1.0/29",
                "publicIPAddressName": "pip-bastion",
                "nsgName": "nsg-hub-bastion"
            }
        },
        "azureFirewall": {
            "type": "object",
            "defaultValue": {
                "name": "AzureFirewall",
                "subnetName": "AzureFirewallSubnet",
                "subnetPrefix": "10.0.3.0/26",
                "publicIPAddressName": "pip-firewall"
            }
        },
        "spokeRoutes": {
            "type": "object",
            "defaultValue": {
                "tableName": "spoke-routes",
                "routeNameFirewall": "spoke-to-firewall"
            }
        },
        "gatewayRoutes": {
            "type": "object",
            "defaultValue": {
                "tableName": "gateway-routes",
                "routeNameFirewall": "gateway-to-firewall"
            }
        },
        "internalLoadBalancer": {
            "type": "object",
            "defaultValue": {
                "name": "lb-internal",
                "backendName": "lb-backend",
                "fontendName": "lb-frontend",
                "probeName": "lb-probe"
            }
        },
        "location": {
            "type": "string"
        }
    },
    "variables": {
        "logAnalyticsWorkspace": "[concat('la-', uniqueString(subscription().subscriptionId, resourceGroup().id))]",
        "peering-name-hub-to-spoke": "hub-to-spoke",
        "peering-name-spoke-to-hub": "spoke-to-hub",
        "nicNameWeb": "nic-web-server",
        "vmNameWeb": "vm-web-server",
        "windowsOSVersion": "2012-R2-Datacenter"
    },
    "resources": [
        {
            "comments": "Log Analytics workspace",
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2020-08-01",
            "name": "[variables('logAnalyticsWorkspace')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "name": "Free"
                },
                "features": {
                    "searchVersion": 1
                }
            }
        },
        {
            "comments": "Hub virtual network and diagnostic configuration",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('hubNetwork').name]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('bastionHost').nsgName)]",
                "[resourceId('Microsoft.Network/routeTables', parameters('gatewayRoutes').tableName)]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('hubNetwork').addressPrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('vpnGateway').subnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('vpnGateway').subnetPrefix]",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('gatewayRoutes').tableName)]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('azureFirewall').subnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('azureFirewall').subnetPrefix]"
                        }
                    },
                    {
                        "name": "[parameters('bastionHost').subnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('bastionHost').subnetPrefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('bastionHost').nsgName)]"
                            }
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsWorkspace'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name)]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
                        "logs": [
                            {
                                "category": "VMProtectionAlerts",
                                "enabled": true
                            }
                        ],
                        "metrics": [
                            {
                                "category": "AllMetrics",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "comments": "Spoke virtual network, subnet, and diagnostic configuration",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('spokeNetwork').name]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('spokeNetwork').subnetNsgName)]",
                "[resourceId('Microsoft.Network/routeTables', parameters('spokeRoutes').tableName)]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('spokeNetwork').addressPrefix]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('spokeNetwork').subnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('spokeNetwork').addressPrefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('spokeNetwork').subnetNsgName)]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('spokeRoutes').tableName)]"
                            }
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsWorkspace'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeNetwork').name)]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
                        "logs": [
                            {
                                "category": "VMProtectionAlerts",
                                "enabled": true
                            }
                        ],
                        "metrics": [
                            {
                                "category": "AllMetrics",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "comments": "Virtual network peering hub to spoke one",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('hubNetwork').name, '/', variables('peering-name-hub-to-spoke'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name)]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeNetwork').name)]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vpnGateway').name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": true,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeNetwork').name)]"
                }
            }
        },
        {
            "comments": "Virtual network peering spoke one to hub",
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('spokeNetwork').name, '/', variables('peering-name-spoke-to-hub'))]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name)]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeNetwork').name)]",
                "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vpnGateway').name)]"
            ],
            "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": true,
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name)]"
                }
            }
        },
        {
            "comments": "Public IP address for Bastion",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-05-01",
            "name": "[parameters('bastionHost').publicIPAddressName]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "comments": "Network security group, rules for Bastion",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[parameters('bastionHost').nsgName]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "bastion-in-allow",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "Internet",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "bastion-control-in-allow",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "bastion-in-host",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRanges": [
                                "8080",
                                "5701"
                            ],
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "bastion-vnet-out-allow",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRanges": [
                                "22",
                                "3389"
                            ],
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "bastion-azure-out-allow",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "AzureCloud",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "bastion-out-host",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRanges": [
                                "8080",
                                "5701"
                            ],
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "bastion-out-deny",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1000,
                            "direction": "Outbound"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsWorkspace'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('bastionHost').nsgName)]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
                        "logs": [
                            {
                                "category": "NetworkSecurityGroupEvent",
                                "enabled": true
                            },
                            {
                                "category": "NetworkSecurityGroupRuleCounter",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "comments": "Azure Bastion and diagnostic configuration",
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2020-06-01",
            "name": "[parameters('bastionHost').name]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name)]",
                "[resourceId('Microsoft.Network/publicIpAddresses', parameters('bastionHost').publicIPAddressName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubNetwork').name, parameters('bastionHost').subnetName)]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('bastionHost').publicIPAddressName)]"
                            }
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsWorkspace'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/bastionHosts', parameters('bastionHost').name)]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
                        "logs": [
                            {
                                "category": "BastionAuditLogs",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "comments": "Public IP address for VPN Gateway",
            "condition": "[parameters('configureSitetosite')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "name": "[parameters('vpnGateway').publicIPAddressName]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "comments": "VPN Gateway",
            "condition": "[parameters('configureSitetosite')]",
            "type": "Microsoft.Network/virtualNetworkGateways",
            "apiVersion": "2019-11-01",
            "name": "[parameters('vpnGateway').name]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name)]",
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('vpnGateway').publicIPAddressName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubNetwork').name, parameters('vpnGateway').subnetName)]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('vpnGateway').publicIPAddressName)]"
                            }
                        },
                        "name": "vnetGatewayConfig"
                    }
                ],
                "sku": {
                    "name": "Basic",
                    "tier": "Basic"
                },
                "gatewayType": "Vpn",
                "vpnType": "RouteBased",
                "enableBgp": false
            },
            "resources": [
                {
                    "condition": "[parameters('configureSitetosite')]",
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsWorkspace'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vpnGateway').name)]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
                        "logs": [
                            {
                                "category": "GatewayDiagnosticLog",
                                "enabled": true
                            },
                            {
                                "category": "TunnelDiagnosticLog",
                                "enabled": true
                            },
                            {
                                "category": "RouteDiagnosticLog",
                                "enabled": true
                            },
                            {
                                "category": "IKEDiagnosticLog",
                                "enabled": true
                            },
                            {
                                "category": "P2SDiagnosticLog",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "comments": "Public IP address for Azure Firewall",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "name": "[parameters('azureFirewall').publicIPAddressName]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "comments": "Azure Firewall and diagnostic configuration",
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2020-05-01",
            "name": "[parameters('azureFirewall').name]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubNetwork').name)]"
            ],
            "properties": {
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert",
                "ipConfigurations": [
                    {
                        "name": "[parameters('azureFirewall').name]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('azureFirewall').publicIPAddressName)]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubNetwork').name, parameters('azureFirewall').subnetName)]"
                            }
                        }
                    }
                ],
                "applicationRuleCollections": [
                    {
                        "name": "spoke-outbound",
                        "properties": {
                            "priority": 100,
                            "action": {
                                "type": "Allow"
                            },
                            "rules": [
                                {
                                    "name": "all-internet",
                                    "protocols": [
                                        {
                                            "protocolType": "Http",
                                            "port": 80
                                        },
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "*"
                                    ],
                                    "sourceAddresses": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsWorkspace'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewall').name)]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
                        "logs": [
                            {
                                "category": "AzureFirewallApplicationRule",
                                "enabled": true
                            },
                            {
                                "category": "AzureFirewallNetworkRule",
                                "enabled": true
                            },
                            {
                                "category": "AzureFirewallDnsProxy",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "comments": "Network security group + rules for spoke network and diagnostic configuration",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[parameters('spokeNetwork').subnetNsgName]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-http-traffic-from-external",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "allow-http-traffic-from-vnet",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "10.0.0.0/16",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsWorkspace'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('spokeNetwork').subnetNsgName)]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
                        "logs": [
                            {
                                "category": "NetworkSecurityGroupEvent",
                                "enabled": true
                            },
                            {
                                "category": "NetworkSecurityGroupRuleCounter",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('nicNameWeb'), copyIndex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeNetwork').name)]",
                "[resourceId('Microsoft.Network/loadBalancers', parameters('internalLoadBalancer').name)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('spokeNetwork').name, parameters('spokeNetwork').subnetName)]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('internalLoadBalancer').name, parameters('internalLoadBalancer').backendName)]"
                                }
                            ]
                        }
                    }
                ]
            },
            "copy": {
                "name": "niccopy",
                "count": "[parameters('windowsVMCount')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('vmNameWeb'), copyIndex())]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat(variables('nicNameWeb'), copyIndex())]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmNameWeb'), copyIndex())]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "[variables('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicNameWeb'), copyIndex()))]"
                        }
                    ]
                }
            },
            "resources": [
                {

                    "type": "extensions",
                    "apiVersion": "2019-12-01",
                    "name": "installIIS",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('vmNameWeb'), copyIndex()))]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Compute",
                        "type": "CustomScriptExtension",
                        "typeHandlerVersion": "1.7",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "commandToExecute": "powershell.exe Install-WindowsFeature -name Web-Server -IncludeManagementTools"
                        }
                    }

                }
            ],
            "copy": {
                "name": "vmcopy",
                "count": "[parameters('windowsVMCount')]"
            }
        },
        {
            "comments": "Route / force tunnel from spokes to Azure firewall",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-05-01",
            "name": "[parameters('spokeRoutes').tableName]",
            "location": "[parameters('location')]",
            "properties": {
                "disableBgpRoutePropagation": false
            }
        },
        {
            "comments": "Route associated with spoke / resources subnet, any address, through Azure firewall",
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2020-07-01",
            "name": "[concat(parameters('spokeRoutes').tableName, '/', parameters('spokeRoutes').routeNameFirewall)]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('spokeRoutes').tableName)]"
            ],
            "properties": {
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "[reference(resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewall').name), '2020-05-01').ipConfigurations[0].properties.privateIpAddress]"
            }
        },
        {
            "comments": "Route / force tunnel from spokes to Azure firewall",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-05-01",
            "name": "[parameters('gatewayRoutes').tableName]",
            "location": "[parameters('location')]",
            "properties": {
                "disableBgpRoutePropagation": false
            }
        },
        {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2020-07-01",
            "name": "[concat(parameters('gatewayRoutes').tableName, '/', parameters('gatewayRoutes').routeNameFirewall)]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('gatewayRoutes').tableName)]"
            ],
            "properties": {
                "addressPrefix": "[parameters('spokeNetwork').addressPrefix]",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "[reference(resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewall').name), '2020-05-01').ipConfigurations[0].properties.privateIpAddress]"
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2020-05-01",
            "name": "[parameters('internalLoadBalancer').name]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeNetwork').name)]"
            ],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[parameters('internalLoadBalancer').fontendName]",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('spokeNetwork').name, parameters('spokeNetwork').subnetName)]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[parameters('internalLoadBalancer').backendName]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "[parameters('internalLoadBalancer').probeName]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', parameters('internalLoadBalancer').name, parameters('internalLoadBalancer').fontendName)]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "disableOutboundSnat": false,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('internalLoadBalancer').name, parameters('internalLoadBalancer').backendName)]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('internalLoadBalancer').name), '/probes/', parameters('internalLoadBalancer').probeName)]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[parameters('internalLoadBalancer').probeName]",
                        "properties": {
                            "protocol": "Http",
                            "port": 80,
                            "requestPath": "/",
                            "intervalInSeconds": 15,
                            "numberOfProbes": 2
                        }
                    }
                ]
            },
            "resources": [
                {
                    "type": "providers/diagnosticSettings",
                    "apiVersion": "2017-05-01-preview",
                    "name": "[concat('Microsoft.Insights/default', variables('logAnalyticsWorkspace'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/loadBalancers', parameters('internalLoadBalancer').name)]",
                        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]"
                    ],
                    "properties": {
                        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspace'))]",
                        "metrics": [
                            {
                                "category": "AllMetrics",
                                "enabled": true
                            }
                        ]
                    }
                }
            ]
        }
    ],
    "outputs": {
        "vpnIp": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('vpnGateway').name)).bgpSettings.bgpPeeringAddresses[0].tunnelIpAddresses[0]]"
        },
        "mocOnpremNetwork": {
            "type": "string",
            "value": "[parameters('hubNetwork').addressPrefix]"
        },
        "spokeNetworkAddressPrefix": {
            "type": "string",
            "value": "[parameters('spokeNetwork').addressPrefix]"
        },
        "azureGatewayName": {
            "type": "string",
            "value": "[parameters('vpnGateway').name]"
        }
    }
}
