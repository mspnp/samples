{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUserName": {
            "type": "string",
            "defaultValue": "azureadmin"
        },
        "adminPassword": {
            "type": "securestring"
        },
        "vmCount": {
            "type": "int",
            "defaultValue": 1
        },
        "workspaceName": {
            "type": "string"
        },
        "functionAppName": {
            "type": "string"
        },
        "serviceToMonitor": {
            "type": "string",
            "defaultValue": "World Wide Web Publishing Service"
        }
    },
    "variables": {
        "log-analytics-template": "[uri(deployment().properties.templateLink.uri, 'nestedtemplates/azuredeploy-log-analytics.json')]",
        "powershell-function-template": "[uri(deployment().properties.templateLink.uri, 'nestedtemplates/azuredeploy-powershell-function.json')]",
        "virtual-network-template": "[uri(deployment().properties.templateLink.uri, 'nestedtemplates/azuredeploy-virtual-network.json')]",
        "windows-vm-template": "[uri(deployment().properties.templateLink.uri, 'nestedtemplates/azuredeploy-windows-vm.json')]",
        "action-group-template": "[uri(deployment().properties.templateLink.uri, 'nestedtemplates/azuredeploy-action-group.json')]",
        "alertQuery": "[concat('Event\n| where EventLog == ''System'' and EventID == 7036 and Source == ''Service Control Manager''\n| parse kind=relaxed EventData with * ''<Data Name=\"param1\">'' ServiceName ''</Data><Data Name=\"param2\">'' ServiceState ''</Data>'' *\n| where ServiceName == ''', parameters('serviceToMonitor'), '''\n| where ServiceState == ''stopped''\n| where TimeGenerated > now() - 5m\n| project Computer, ServiceName, ServiceState, TimeGenerated, _ResourceId')]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "log-analytics",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('log-analytics-template')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "workspaceName": {
                        "value": "[parameters('workspaceName')]"
                    },
                    "serviceToMonitor": {
                        "value": "[parameters('serviceToMonitor')]"
                    },
                    "alertQuery": {
                        "value": "[variables('alertQuery')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "virtual-network",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('virtual-network-template')]",
                    "contentVersion": "1.0.0.0"
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "windows-vm",
            "dependsOn": [ 
                "[resourceId('Microsoft.Resources/deployments', 'log-analytics')]",
                "[resourceId('Microsoft.Resources/deployments', 'virtual-network')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('windows-vm-template')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "vmCount": {
                        "value": "[parameters('vmCount')]"
                    },
                    "virtualNetworkName": {
                        "value": "[reference('virtual-network').outputs.virtualNetworkName.value]"
                    },
                    "subnetName": {
                        "value": "[reference('virtual-network').outputs.subnetName.value]"
                    },
                    "workSpaceId": {
                        "value": "[reference('log-analytics').outputs.workSpaceID.value]"
                    },
                    "workspaceKey": {
                        "value": "[reference('log-analytics').outputs.workSpaceKey.value]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "powershell-function",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'log-analytics')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('powershell-function-template')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "functionAppName": {
                        "value": "[parameters('functionAppName')]"
                    },
                    "workSpaceResourceId": {
                        "value": "[reference('log-analytics').outputs.workSpaceResourceId.value]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "action-group",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('action-group-template')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "workspaceName": {
                        "value": "[parameters('workspaceName')]"
                    },
                    "functionKey": {
                        "value": "[reference('powershell-function').outputs.functionKey.value]"
                    },
                    "serviceToMonitor": {
                        "value": "[parameters('serviceToMonitor')]"
                    },
                    "alertQuery": {
                        "value": "[variables('alertQuery')]"
                    }
                }
            }
        }
    ]
}